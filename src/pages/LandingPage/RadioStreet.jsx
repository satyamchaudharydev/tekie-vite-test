import React from 'react'
import { get } from 'lodash'
import cx from 'classnames'
import './radioStreet.scss'
import Header from './components/Header'
import { hsm } from '../../utils/size'

const renderGiftIcon = () => (
  <svg className='gift-icon' viewBox='0 0 61 61' fill="none">
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M33.947 4.409a8.437 8.437 0 113.229 16.232h-8.438v-8.437a8.437 8.437 0 015.209-7.795zm4.143 3.197a4.687 4.687 0 00-5.602 4.598v4.687h4.688a4.688 4.688 0 00.914-9.285z"
      fill="#fff"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M25.845 7.873a4.687 4.687 0 10-1.794 9.018h4.687v-4.687a4.687 4.687 0 00-2.893-4.33zm4.768 10.893h1.875v-6.562a8.438 8.438 0 10-8.437 8.437h8.437v-1.875h-1.875z"
      fill="#fff"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M11.863 20.641c-1.035 0-1.875.84-1.875 1.875v5.625c0 1.036.84 1.875 1.875 1.875h37.5c1.036 0 1.875-.84 1.875-1.875v-5.625c0-1.035-.84-1.875-1.875-1.875h-37.5zm-5.625 1.875a5.625 5.625 0 015.625-5.625h37.5a5.625 5.625 0 015.625 5.625v5.625a5.625 5.625 0 01-5.625 5.625h-37.5a5.625 5.625 0 01-5.625-5.625v-5.625z"
      fill="#fff"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M11.863 30.016c1.036 0 1.875.84 1.875 1.875v16.875a3.75 3.75 0 003.75 3.75h26.25a3.75 3.75 0 003.75-3.75V31.891a1.875 1.875 0 113.75 0v16.875a7.5 7.5 0 01-7.5 7.5h-26.25a7.5 7.5 0 01-7.5-7.5V31.891c0-1.035.84-1.875 1.875-1.875z"
      fill="#fff"
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M30.613 16.891c1.036 0 1.875.84 1.875 1.875v35.625a1.875 1.875 0 01-3.75 0V18.766c0-1.035.84-1.875 1.875-1.875z"
      fill="#fff"
    />
  </svg>
)

const renderBinaryIcon = () => (
  <svg className='binary-icon' viewBox="0 0 61 61" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M47.8995 8.54545C52.2185 12.7135 53.7228 18.9849 54.1826 22.7951C54.2724 23.5389 53.7422 24.2145 52.9985 24.3043C52.2547 24.3941 51.5791 23.8639 51.4893 23.1202C51.0525 19.5003 49.6509 14.0058 46.0156 10.4975C44.2315 8.77568 41.8879 7.50905 38.7636 7.17291C35.6158 6.83424 31.5903 7.43207 26.4625 9.60267C25.7726 9.89468 24.9766 9.57216 24.6846 8.88229C24.3926 8.19242 24.7151 7.39645 25.405 7.10443C30.8224 4.81127 35.3203 4.07396 39.0538 4.47565C42.8108 4.87986 45.7065 6.42907 47.8995 8.54545Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M6.50877 29.6417C7.54327 31.0837 9.04015 31.8047 10.9994 31.8047C12.9587 31.8047 14.4556 31.0759 15.4901 29.6182C16.5246 28.1605 17.0418 26.0523 17.0418 23.2936C17.0418 20.535 16.5246 18.4347 15.4901 16.9926C14.4556 15.5349 12.9587 14.8061 10.9994 14.8061C9.04015 14.8061 7.54327 15.5349 6.50877 16.9926C5.47428 18.4347 4.95703 20.535 4.95703 23.2936C4.95703 26.068 5.47428 28.184 6.50877 29.6417ZM13.327 27.9724C12.8411 28.9442 12.0653 29.4301 10.9994 29.4301C9.93357 29.4301 9.1577 28.9442 8.6718 27.9724C8.18591 26.9849 7.94296 25.4253 7.94296 23.2936C7.94296 21.162 8.18591 19.6102 8.6718 18.6384C9.1577 17.6666 9.93357 17.1807 10.9994 17.1807C12.0653 17.1807 12.8411 17.6666 13.327 18.6384C13.8129 19.5945 14.0559 21.1463 14.0559 23.2936C14.0559 25.4253 13.8129 26.9849 13.327 27.9724Z" fill="white"/>
    <path d="M31.2334 30.347C31.2334 29.5476 30.7632 29.1479 29.8227 29.1479H27.354V16.4049C27.354 15.9346 27.2208 15.5663 26.9543 15.2998C26.6879 15.0334 26.3352 14.9001 25.8963 14.9001C25.4731 14.9001 25.0264 15.0412 24.5562 15.3233L20.912 17.5804C20.5044 17.8312 20.3007 18.1839 20.3007 18.6384C20.3007 18.9833 20.4104 19.2967 20.6298 19.5789C20.8649 19.861 21.1471 20.0021 21.4762 20.0021C21.6486 20.0021 21.8446 19.9394 22.064 19.814L24.3211 18.4268V29.1479H21.8759C20.9198 29.1479 20.4417 29.5476 20.4417 30.347C20.4417 31.1777 20.9198 31.5931 21.8759 31.5931H29.8227C30.7632 31.5931 31.2334 31.1777 31.2334 30.347Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M46.2142 27.283C45.9421 26.6707 45.3349 26.2761 44.6649 26.2761C43.9948 26.2761 43.3876 26.6707 43.1155 27.283L34.0727 47.6293C33.6924 48.485 34.0778 49.487 34.9335 49.8673C35.7892 50.2476 36.7912 49.8622 37.1715 49.0065L38.7335 45.492H50.5963L52.1583 49.0065C52.5386 49.8622 53.5406 50.2476 54.3963 49.8673C55.252 49.487 55.6373 48.485 55.257 47.6293L46.2142 27.283ZM49.0891 42.101H40.2406L44.6649 32.1464L49.0891 42.101Z" fill="white"/>
    <path d="M7.37329 38.1469C7.83309 41.9569 9.18827 47.6456 13.4606 51.5169C17.8335 55.4793 24.8879 57.2225 36.0117 53.8877C36.7293 53.6726 37.1366 52.9165 36.9215 52.1989C36.7064 51.4814 35.9503 51.074 35.2327 51.2892C24.6607 54.4585 18.7123 52.6148 15.2822 49.5066C11.7515 46.3074 10.5035 41.442 10.0666 37.8218C9.97682 37.0781 9.30115 36.5479 8.55742 36.6377C7.81369 36.7275 7.28353 37.4031 7.37329 38.1469Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M25.143 6.4833C30.6328 4.15951 35.2488 3.38732 39.1288 3.80476C43.044 4.22599 46.0777 5.84587 48.3729 8.06086C52.8628 12.3939 54.3928 18.8595 54.8584 22.7173C54.993 23.8329 54.1978 24.8464 53.0822 24.9811C51.9666 25.1157 50.9531 24.3205 50.8184 23.2049C50.3873 19.6326 49.0115 14.3323 45.5471 10.9889C43.8652 9.36579 41.6597 8.16978 38.6935 7.85066C35.6921 7.52774 31.7847 8.09071 26.7292 10.2307C25.6944 10.6687 24.5005 10.1849 24.0625 9.15009C23.6244 8.11529 24.1082 6.92132 25.143 6.4833ZM38.9837 5.15339C35.3966 4.76746 31.0168 5.46989 25.6718 7.73242C25.3268 7.87843 25.1656 8.27641 25.3116 8.62135C25.4576 8.96628 25.8556 9.12755 26.2005 8.98154C31.4008 6.78029 35.5444 6.1476 38.8386 6.50202C42.121 6.85518 44.6027 8.19243 46.489 10.0129C50.2953 13.6862 51.7225 19.3749 52.1651 23.0423C52.2099 23.4142 52.5478 23.6793 52.9197 23.6344C53.2915 23.5895 53.5566 23.2517 53.5117 22.8798C53.0576 19.1172 51.579 13.04 47.431 9.03689C45.3402 7.01913 42.5825 5.54058 38.9837 5.15339ZM11.0018 15.4877C9.23768 15.4877 7.95796 16.1293 7.06428 17.3886L7.06228 17.3914C6.14483 18.6703 5.63767 20.6069 5.63767 23.2971C5.63767 26.0021 6.14452 27.9557 7.06327 29.2512C7.95567 30.4943 9.23535 31.1299 11.0018 31.1299C12.766 31.1299 14.0457 30.4884 14.9394 29.2291C15.8592 27.9331 16.366 25.9864 16.366 23.2971C16.366 20.6069 15.8589 18.6703 14.9414 17.3914L14.9394 17.3886C14.0457 16.1293 12.766 15.4877 11.0018 15.4877ZM5.95912 16.6021C7.1344 14.947 8.84808 14.1313 11.0018 14.1313C13.1556 14.1313 14.8693 14.947 16.0446 16.6022C17.1954 18.2073 17.7224 20.4708 17.7224 23.2971C17.7224 26.125 17.1948 28.3947 16.0456 30.0141C14.8703 31.6702 13.1562 32.4863 11.0018 32.4863C8.85045 32.4863 7.13667 31.6805 5.96013 30.0404L5.95811 30.0376C4.80852 28.4177 4.28125 26.1397 4.28125 23.2971C4.28125 20.4707 4.80828 18.2072 5.95912 16.6021ZM24.9115 15.906L21.2715 18.1604L21.2698 18.1615C21.0501 18.2967 20.9813 18.4375 20.9813 18.6419C20.9813 18.8266 21.0351 18.992 21.1605 19.1567C21.2803 19.2971 21.3777 19.3273 21.4787 19.3273C21.4904 19.3273 21.5657 19.3211 21.7213 19.2335L25.0017 17.2174V29.8296H21.8784C21.4782 29.8296 21.3044 29.9157 21.2377 29.9715C21.1944 30.0077 21.1224 30.0904 21.1224 30.3504C21.1224 30.6345 21.1997 30.7315 21.2475 30.7731C21.3136 30.8305 21.4833 30.9183 21.8784 30.9183H29.8251C30.2101 30.9183 30.3721 30.8315 30.4341 30.7767C30.4801 30.7361 30.5576 30.6379 30.5576 30.3504C30.5576 30.0867 30.4852 30.003 30.4439 29.9679C30.3815 29.9148 30.2153 29.8296 29.8251 29.8296H26.6783V16.4083C26.6783 16.0708 26.5866 15.8923 26.4772 15.7828C26.3589 15.6645 26.1898 15.5818 25.8988 15.5818C25.6307 15.5818 25.3051 15.6705 24.9115 15.906ZM24.2097 14.7452C24.7548 14.4182 25.3213 14.2254 25.8988 14.2254C26.4855 14.2254 27.0217 14.4091 27.4363 14.8237C27.8598 15.2472 28.0347 15.8053 28.0347 16.4083V28.4732H29.8251C30.3754 28.4732 30.9146 28.5878 31.3224 28.9344C31.7513 29.299 31.914 29.8148 31.914 30.3504C31.914 30.8937 31.7564 31.4186 31.3321 31.7933C30.9239 32.1539 30.3806 32.2747 29.8251 32.2747H21.8784C21.3173 32.2747 20.7699 32.1549 20.3579 31.797C19.9277 31.4232 19.766 30.8971 19.766 30.3504C19.766 29.8111 19.933 29.2943 20.3677 28.9308C20.7791 28.5868 21.3224 28.4732 21.8784 28.4732H23.6453V19.6431L22.4123 20.4009L22.4029 20.4063C22.1256 20.5648 21.8116 20.6837 21.4787 20.6837C20.9233 20.6837 20.4584 20.4331 20.1112 20.0165L20.1039 20.0077L20.0969 19.9987C19.7885 19.6022 19.6249 19.1433 19.6249 18.6419C19.6249 17.9374 19.9634 17.3731 20.5582 17.0067C20.5584 17.0066 20.5587 17.0064 20.5589 17.0062L24.2097 14.7452ZM9.26059 16.9738C9.77315 16.6528 10.3629 16.506 11.0018 16.506C11.6408 16.506 12.2305 16.6528 12.7431 16.9738C13.2543 17.294 13.647 17.7612 13.9351 18.3366C14.4966 19.443 14.7365 21.1307 14.7365 23.2971C14.7365 25.4529 14.4952 27.1428 13.938 28.2752L13.9361 28.2791C13.6479 28.8554 13.2549 29.3234 12.7431 29.6439C12.2305 29.9649 11.6408 30.1117 11.0018 30.1117C10.3629 30.1117 9.77315 29.9649 9.26059 29.6439C8.74878 29.3234 8.35578 28.8554 8.06762 28.2791L8.06569 28.2753C7.50844 27.1428 7.26717 25.4529 7.26717 23.2971C7.26717 21.1427 7.50802 19.4577 8.06762 18.3386C8.35578 17.7622 8.74878 17.2943 9.26059 16.9738ZM9.98053 18.1234C9.71646 18.2888 9.47858 18.5497 9.28084 18.9452C8.86864 19.7696 8.62359 21.1881 8.62359 23.2971C8.62359 25.403 8.86784 26.8317 9.2818 27.6744C9.47935 28.0688 9.71689 28.3292 9.98053 28.4943C10.2438 28.6592 10.575 28.7553 11.0018 28.7553C11.4287 28.7553 11.7598 28.6592 12.0232 28.4943C12.2868 28.3292 12.5243 28.0688 12.7219 27.6744C13.1358 26.8317 13.3801 25.403 13.3801 23.2971C13.3801 21.17 13.1344 19.755 12.7248 18.9491L12.7228 18.9452C12.5251 18.5497 12.2872 18.2888 12.0232 18.1234C11.7598 17.9585 11.4287 17.8624 11.0018 17.8624C10.575 17.8624 10.2438 17.9585 9.98053 18.1234ZM44.6673 26.9578C44.2653 26.9578 43.9009 27.1945 43.7377 27.5619L34.6949 47.9082C34.4667 48.4216 34.6979 49.0228 35.2113 49.251C35.7248 49.4792 36.326 49.2479 36.5541 48.7345L38.2951 44.8173H51.0394L52.7804 48.7345C53.0086 49.2479 53.6098 49.4792 54.1232 49.251C54.6367 49.0228 54.8679 48.4216 54.6397 47.9082L45.5969 27.5619C45.4336 27.1945 45.0693 26.9578 44.6673 26.9578ZM42.4981 27.011C42.8791 26.1538 43.7292 25.6014 44.6673 25.6014C45.6054 25.6014 46.4554 26.1538 46.8364 27.011L55.8792 47.3573C56.4116 48.5553 55.8721 49.958 54.6741 50.4905C53.4761 51.0229 52.0734 50.4834 51.5409 49.2854L50.1579 46.1737H39.1766L37.7937 49.2854C37.4806 49.9897 36.8667 50.4665 36.1705 50.6316C36.8202 50.8131 37.3655 51.3136 37.5735 52.0076C37.8962 53.084 37.2853 54.2181 36.2089 54.5408C24.9476 57.9168 17.6166 56.1992 13.0076 52.0229C8.54987 47.9836 7.16792 42.089 6.70239 38.2316C6.56776 37.116 7.36299 36.1024 8.47858 35.9678C9.59418 35.8332 10.6077 36.6284 10.7423 37.744C11.1735 41.3166 12.3948 45.9762 15.74 49.0075C18.9348 51.9024 24.607 53.7708 35.0403 50.643C35.0531 50.6391 35.0658 50.6354 35.0786 50.6319C34.9376 50.5984 34.7977 50.5515 34.6605 50.4905C33.4625 49.958 32.9229 48.5553 33.4554 47.3573L42.4981 27.011ZM44.6673 30.4799L50.1352 42.7826H39.1994L44.6673 30.4799ZM41.2866 41.4262H48.048L44.6673 33.8197L41.2866 41.4262ZM9.39568 37.9065C9.3508 37.5347 9.01297 37.2696 8.6411 37.3145C8.26924 37.3593 8.00416 37.6972 8.04904 38.069C8.50311 41.8316 9.83152 47.3145 13.9184 51.0178C18.0553 54.7663 24.833 56.5351 35.8194 53.2415C36.1782 53.134 36.3818 52.7559 36.2743 52.3971C36.1667 52.0383 35.7887 51.8347 35.4299 51.9422C24.7193 55.1532 18.4947 53.334 14.8292 50.0126C11.1132 46.6454 9.8383 41.5742 9.39568 37.9065Z" fill="white"/>
  </svg>
)

const renderCertificateIcon = () => (
  <svg className='certificate-icon' viewBox="0 0 61 61" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M38.3086 31.8914C35.202 31.8914 32.6836 34.4098 32.6836 37.5164C32.6836 40.623 35.202 43.1414 38.3086 43.1414C41.4152 43.1414 43.9336 40.623 43.9336 37.5164C43.9336 34.4098 41.4152 31.8914 38.3086 31.8914ZM28.9336 37.5164C28.9336 32.3387 33.1309 28.1414 38.3086 28.1414C43.4863 28.1414 47.6836 32.3387 47.6836 37.5164C47.6836 42.694 43.4863 46.8914 38.3086 46.8914C33.1309 46.8914 28.9336 42.694 28.9336 37.5164Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M33.3086 41.8914C34.3441 41.8914 35.1836 42.7308 35.1836 43.7664V51.2664L37.1836 49.7664C37.8503 49.2664 38.7669 49.2664 39.4336 49.7664L41.4336 51.2664V43.7664C41.4336 42.7308 42.2731 41.8914 43.3086 41.8914C44.3441 41.8914 45.1836 42.7308 45.1836 43.7664V55.0164C45.1836 55.7266 44.7823 56.3758 44.1471 56.6934C43.5119 57.011 42.7518 56.9425 42.1836 56.5164L38.3086 53.6101L34.4336 56.5164C33.8654 56.9425 33.1053 57.011 32.4701 56.6934C31.8348 56.3758 31.4336 55.7266 31.4336 55.0164V43.7664C31.4336 42.7308 32.2731 41.8914 33.3086 41.8914Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M13.3086 14.3914C11.5941 14.3914 10.1836 15.8019 10.1836 17.5164V42.5164C10.1836 43.3452 10.5128 44.14 11.0989 44.7261C11.6849 45.3121 12.4798 45.6414 13.3086 45.6414H25.8086C26.8441 45.6414 27.6836 46.4808 27.6836 47.5164C27.6836 48.5519 26.8441 49.3914 25.8086 49.3914H13.3086C11.4852 49.3914 9.73655 48.667 8.44723 47.3777C7.15792 46.0884 6.43359 44.3397 6.43359 42.5164V17.5164C6.43359 13.7308 9.52306 10.6414 13.3086 10.6414H48.3086C50.132 10.6414 51.8806 11.3657 53.17 12.655C54.4593 13.9443 55.1836 15.693 55.1836 17.5164V42.5164C55.1824 43.722 54.8641 44.908 54.2608 45.9518C53.6574 46.9956 52.7902 47.8623 51.7461 48.4652C50.8493 48.9829 49.7026 48.6757 49.1848 47.7789C48.667 46.8821 48.9743 45.7353 49.8711 45.2176C50.3457 44.9436 50.7399 44.5496 51.0141 44.0751C51.2884 43.6007 51.433 43.0624 51.4336 42.5144V17.5164C51.4336 16.6876 51.1044 15.8927 50.5183 15.3066C49.9322 14.7206 49.1374 14.3914 48.3086 14.3914H13.3086Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M13.9336 22.5164C13.9336 21.4808 14.7731 20.6414 15.8086 20.6414H45.8086C46.8441 20.6414 47.6836 21.4808 47.6836 22.5164C47.6836 23.5519 46.8441 24.3914 45.8086 24.3914H15.8086C14.7731 24.3914 13.9336 23.5519 13.9336 22.5164Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M13.9336 30.0164C13.9336 28.9808 14.7731 28.1414 15.8086 28.1414H23.3086C24.3441 28.1414 25.1836 28.9808 25.1836 30.0164C25.1836 31.0519 24.3441 31.8914 23.3086 31.8914H15.8086C14.7731 31.8914 13.9336 31.0519 13.9336 30.0164Z" fill="white"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M13.9336 37.5164C13.9336 36.4808 14.7731 35.6414 15.8086 35.6414H20.8086C21.8441 35.6414 22.6836 36.4808 22.6836 37.5164C22.6836 38.5519 21.8441 39.3914 20.8086 39.3914H15.8086C14.7731 39.3914 13.9336 38.5519 13.9336 37.5164Z" fill="white"/>
  </svg>
)

const renderDurationClock = () => (
  <svg className='duration-clock' viewBox="0 0 37 38" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g opacity="0.4">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M18.4355 4.3062C26.3917 4.49092 32.7849 11.0018 32.7849 19.0025C32.7849 27.1265 26.2179 33.7145 18.086 33.6992C9.94724 33.6839 3.30139 26.9956 3.39153 18.8491C3.42831 15.2865 4.75896 11.8586 7.13558 9.20428C7.55207 8.73912 8.26678 8.69967 8.73194 9.11615C9.1971 9.53264 9.23655 10.2474 8.82007 10.7125C6.80926 12.9583 5.68346 15.8585 5.65244 18.8728L5.65243 18.8737C5.57607 25.7559 11.2004 31.4252 18.0903 31.4382C24.966 31.4511 30.5238 25.8819 30.5238 19.0025C30.5238 12.5149 25.5558 7.18506 19.2187 6.61388V11.6542C19.2187 12.2785 18.7125 12.7847 18.0882 12.7847C17.4638 12.7847 16.9576 12.2785 16.9576 11.6542V5.74622C16.9574 5.55377 16.9957 5.36322 17.0704 5.18586C17.1454 5.00786 17.2554 4.84678 17.394 4.71222C17.5326 4.57767 17.6968 4.47238 17.8769 4.40266C18.0549 4.33378 18.2448 4.301 18.4355 4.3062Z" fill="#B7D7E9"/>
    <path d="M16.49 20.597L10.9081 12.6127C10.8309 12.5021 10.7951 12.3678 10.8069 12.2334C10.8188 12.0991 10.8775 11.9731 10.9729 11.8777C11.0683 11.7823 11.1943 11.7236 11.3287 11.7117C11.463 11.6998 11.5973 11.7357 11.7079 11.8129L19.6922 17.3948C20.182 17.7475 20.5131 18.2789 20.6142 18.8739C20.7152 19.4689 20.5779 20.0798 20.232 20.5743C19.8861 21.0689 19.3594 21.4074 18.7658 21.5166C18.1723 21.6259 17.5595 21.497 17.0602 21.158C16.8395 21.005 16.6466 20.8153 16.49 20.597Z" fill="#B7D7E9"/>
    </g>
  </svg>
)

const renderEventClock = () => (
  <svg className='event-clock' viewBox="0 0 37 37" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g opacity="0.4">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M3.39062 18.4999C3.39062 10.3859 9.97329 3.80322 18.0873 3.80322C26.2013 3.80322 32.784 10.3859 32.784 18.4999C32.784 26.6139 26.2013 33.1966 18.0873 33.1966C9.97329 33.1966 3.39062 26.6139 3.39062 18.4999ZM18.0873 6.06425C11.222 6.06425 5.65165 11.6346 5.65165 18.4999C5.65165 25.3652 11.222 30.9356 18.0873 30.9356C24.9526 30.9356 30.523 25.3652 30.523 18.4999C30.523 11.6346 24.9526 6.06425 18.0873 6.06425Z" fill="#B7D7E9"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M3.39062 18.4999C3.39062 10.3859 9.97329 3.80322 18.0873 3.80322C26.2013 3.80322 32.784 10.3859 32.784 18.4999C32.784 26.6139 26.2013 33.1966 18.0873 33.1966C9.97329 33.1966 3.39062 26.6139 3.39062 18.4999ZM18.0873 6.06425C11.222 6.06425 5.65165 11.6346 5.65165 18.4999C5.65165 25.3652 11.222 30.9356 18.0873 30.9356C24.9526 30.9356 30.523 25.3652 30.523 18.4999C30.523 11.6346 24.9526 6.06425 18.0873 6.06425Z" fill="black" fill-opacity="0.2"/>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M18.0875 8.3252C18.7119 8.3252 19.2181 8.83134 19.2181 9.45571V18.4998H24.8706C25.495 18.4998 26.0012 19.006 26.0012 19.6303C26.0012 20.2547 25.495 20.7609 24.8706 20.7609H18.0875C17.4632 20.7609 16.957 20.2547 16.957 19.6303V9.45571C16.957 8.83134 17.4632 8.3252 18.0875 8.3252Z" fill="#B7D7E9"/>
    </g>
  </svg>
)

const renderCalendarIcon = () => (
  <svg className='calendar-icon' viewBox="0 0 37 38" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g opacity="0.4">
      <path fill-rule="evenodd" clip-rule="evenodd" d="M6.78378 7.69462C5.53505 7.69462 4.52275 8.70692 4.52275 9.95565V30.3049C4.52275 31.5537 5.53505 32.566 6.78378 32.566H29.3941C30.6428 32.566 31.6551 31.5537 31.6551 30.3049V9.95565C31.6551 8.70692 30.6428 7.69462 29.3941 7.69462H6.78378ZM2.26172 9.95565C2.26172 7.45819 4.28631 5.43359 6.78378 5.43359H29.3941C31.8915 5.43359 33.9161 7.45819 33.9161 9.95565V30.3049C33.9161 32.8024 31.8915 34.827 29.3941 34.827H6.78378C4.28631 34.827 2.26172 32.8024 2.26172 30.3049V9.95565Z" fill="#B7D7E9"/>
      <path d="M20.9145 18.9999C21.8511 18.9999 22.6103 18.2407 22.6103 17.3042C22.6103 16.3676 21.8511 15.6084 20.9145 15.6084C19.978 15.6084 19.2188 16.3676 19.2188 17.3042C19.2188 18.2407 19.978 18.9999 20.9145 18.9999Z" fill="#B7D7E9"/>
      <path d="M26.5669 18.9999C27.5034 18.9999 28.2626 18.2407 28.2626 17.3042C28.2626 16.3676 27.5034 15.6084 26.5669 15.6084C25.6303 15.6084 24.8711 16.3676 24.8711 17.3042C24.8711 18.2407 25.6303 18.9999 26.5669 18.9999Z" fill="#B7D7E9"/>
      <path d="M20.9145 24.6523C21.8511 24.6523 22.6103 23.8931 22.6103 22.9565C22.6103 22.02 21.8511 21.2607 20.9145 21.2607C19.978 21.2607 19.2188 22.02 19.2188 22.9565C19.2188 23.8931 19.978 24.6523 20.9145 24.6523Z" fill="#B7D7E9"/>
      <path d="M26.5669 24.6523C27.5034 24.6523 28.2626 23.8931 28.2626 22.9565C28.2626 22.02 27.5034 21.2607 26.5669 21.2607C25.6303 21.2607 24.8711 22.02 24.8711 22.9565C24.8711 23.8931 25.6303 24.6523 26.5669 24.6523Z" fill="#B7D7E9"/>
      <path d="M9.60983 24.6523C10.5464 24.6523 11.3056 23.8931 11.3056 22.9565C11.3056 22.02 10.5464 21.2607 9.60983 21.2607C8.67329 21.2607 7.91406 22.02 7.91406 22.9565C7.91406 23.8931 8.67329 24.6523 9.60983 24.6523Z" fill="#B7D7E9"/>
      <path d="M15.2622 24.6523C16.1987 24.6523 16.958 23.8931 16.958 22.9565C16.958 22.02 16.1987 21.2607 15.2622 21.2607C14.3256 21.2607 13.5664 22.02 13.5664 22.9565C13.5664 23.8931 14.3256 24.6523 15.2622 24.6523Z" fill="#B7D7E9"/>
      <path d="M9.60983 30.3051C10.5464 30.3051 11.3056 29.5459 11.3056 28.6093C11.3056 27.6728 10.5464 26.9136 9.60983 26.9136C8.67329 26.9136 7.91406 27.6728 7.91406 28.6093C7.91406 29.5459 8.67329 30.3051 9.60983 30.3051Z" fill="#B7D7E9"/>
      <path d="M15.2622 30.3051C16.1987 30.3051 16.958 29.5459 16.958 28.6093C16.958 27.6728 16.1987 26.9136 15.2622 26.9136C14.3256 26.9136 13.5664 27.6728 13.5664 28.6093C13.5664 29.5459 14.3256 30.3051 15.2622 30.3051Z" fill="#B7D7E9"/>
      <path d="M20.9145 30.3051C21.8511 30.3051 22.6103 29.5459 22.6103 28.6093C22.6103 27.6728 21.8511 26.9136 20.9145 26.9136C19.978 26.9136 19.2188 27.6728 19.2188 28.6093C19.2188 29.5459 19.978 30.3051 20.9145 30.3051Z" fill="#B7D7E9"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M9.04458 3.17285C9.66894 3.17285 10.1751 3.679 10.1751 4.30337V6.5644C10.1751 7.18876 9.66894 7.69491 9.04458 7.69491C8.42021 7.69491 7.91406 7.18876 7.91406 6.5644V4.30337C7.91406 3.679 8.42021 3.17285 9.04458 3.17285Z" fill="#B7D7E9"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M27.1305 3.17285C27.7549 3.17285 28.261 3.679 28.261 4.30337V6.5644C28.261 7.18876 27.7549 7.69491 27.1305 7.69491C26.5061 7.69491 26 7.18876 26 6.5644V4.30337C26 3.679 26.5061 3.17285 27.1305 3.17285Z" fill="#B7D7E9"/>
      <path fill-rule="evenodd" clip-rule="evenodd" d="M3.39062 11.0864H32.784V13.3475H3.39062V11.0864Z" fill="#B7D7E9"/>
    </g>
  </svg>
)

class RadioStreet extends React.Component {
  renderRegisterButton = () => {
    const isB2C = get(this.props, 'location.pathname') === '/events/spy-squad-camp-community'
    const routes = {
      '/events/spy-squad-camp': '',
      '/events/spy-squad-camp-school': '',
      '/events/spy-squad-camp-community': ''
    }
    return (
      <div className='registerButton' onClick={() => {
        this.props.history.push(
          get(this.props, 'location.pathname').replace('events', 'signup') + window.location.search
        )
      }}>
        <div>Register Now</div> <div className='register-arrow-right'>
        <svg viewBox='0 0 18 19' fill="none">
          <path
            d="M1.849 8.064H11.94l-4.41 4.41a.91.91 0 000 1.282.9.9 0 001.275 0l5.954-5.954a.9.9 0 000-1.274L8.815.565A.9.9 0 107.54 1.839l4.4 4.418H1.849a.906.906 0 00-.904.904c0 .497.407.903.904.903z"
            fill="#fff"
          />
        </svg>
        </div>
      </div>
    )
  }

  render() { 
    const isB2C = get(this.props, 'location.pathname') === '/events/spy-squad-camp-community' || get(this.props, 'location.pathname') === '/events/spy-squad-camp-school'
    return (
      <>
        <div className='container'>
          <div className='header-container'>
            <Header headerButton={this.renderRegisterButton()} />
          </div>
          <div className={cx('header-mobile-container', isB2C && 'header-mobile-container-center')}>
            <div className='tekie-logo-mb'></div>
            {!isB2C && (
              <div className='radio-street-mb'></div>
            )}
          </div>
          <div className={cx('posterBanner', isB2C && 'posterBannerB2C')}>
            <div className='description'>
              Learn <span>binary</span> code, Win Exciting <span>prizes</span> and get <span>certified</span>.
            </div>
            <div className='hero-column-wrapper'>
              <div className='row'>
                {renderCalendarIcon()}
                <span>{isB2C ? '18th December 2021' : '19th December 2021'}</span>
              </div>
              <div className='row'>
                {renderEventClock()}
                <span>{isB2C ? '03:00 PM' : '11:00 AM'} Onwards</span>
              </div>
              <div className='row'>
                {renderDurationClock()}
                <span>60-75 Minutes</span>
              </div>
            </div>
            {/* <div className='row'> */}
            {this.renderRegisterButton()}
            <div className='no-coding-text'>*no prior coding knowledge required</div>
            {/* </div> */}
          </div>
          <div className='posterMb'>
            <div className='hero-column-wrapper'>
              <div className='row'>
                {renderCalendarIcon()}
                <span className='event-details-text'>{isB2C ? '18th December 2021' : '19th December 2021'}</span>
              </div>
              <div className='row'>
                {renderEventClock()}
                <span className='event-details-text'>{isB2C ? '03:00 PM' : '11:00 AM'} Onwards</span>
              </div>
              <div className='row'>
                {renderDurationClock()}
                <span className='event-details-text'>60-75 Minutes ~</span>
              </div>
            </div>
            <div className='learn-binary'>Learn <span>binary</span> code, Win Exciting <span>prizes</span> and get <span>certified</span>.</div>
            <div style={{
              width: '100%',
              display: 'flex',
              flexDirection: 'column',
              alignItems: 'center',
              backgroundColor: '#00181f',
              position: 'fixed',
              bottom: 0,
              left: 0,
              paddingTop: hsm(20),
              zIndex: 20
            }}>
              {this.renderRegisterButton()}
              <div className='no-coding-text'>*no prior coding knowledge required</div>
            </div>
          </div>
        </div>
        <div className='body'>
          <div className='heading'>Overview</div>
          <div className='body-text'>
          At the Spy Squad Camp, you will learn how to communicate secret messages through binary language. From learning the history of Cryptography, looking at popular spy-coms to playing team games with real tasks, we will do it all. <br/><br/>
          {!isB2C && 'This event is brought to you by Tekie in collaboration with Radio Street.'}
          </div>
          <div className={cx('heading', isB2C ? 'm-top-b2c' : 'm-top')}>Prizes</div>

          <div className='row'>
            <div className='gift-card active'>

              <div className={ false ? 'gift-bg-1-b2c' : 'gift-bg-1'}></div>
              <div className='gift-card-number'>1<span>st</span></div>
              <div className='gift-bottom-text'>{ false ? 'Amazon Echo Dot' : 'Mi Smart Band 6' }</div>
            </div>
            <div className='gift-card'>
              <div className={ false ? 'gift-bg-2-b2c' : 'gift-bg-2'}></div>
              <div className='gift-card-number'>2<span>nd</span></div>
              <div className='gift-bottom-text'>{ false ? 'MI Fit band 6' : 'Amazon Coupon worth INR 1,500' }</div>
            </div>
            <div className='gift-card'>
              <div className={ false ? 'gift-bg-3-b2c' : 'gift-bg-3'}></div>
              <div className='gift-card-number'>3<span>rd</span></div>
              <div className='gift-bottom-text'>{ false ? 'OnePlus Buds Z' : 'Amazon Coupon worth INR 1,000' }</div>
            </div>
            {
              false && (
                <>
                <div className='gift-card'>
                  <div className='gift-bg-4-b2c'></div>
                  <div className='gift-card-number-extra'>4<span>th - </span>10<span>th</span></div>
                  <div className='gift-bottom-text'>Amazon Coupon worth ₹500/-</div>
                </div>
                <div className='gift-card'>
                  <div className='gift-bg-5-b2c'></div>
                  <div className='gift-card-number-extra'>Add-on</div>
                  <div className='gift-bottom-text'>
                    20% Off on Tekie’s Coding Classes<br/> for the top 10 participants
                  </div>
                </div>
                </>
              )
            }
          </div>
          {/* <div className='body-text'>
          At the Spy Squad Camp, you will learn how to communicate secret messages through binary language. From learning the history of Cryptography, looking at popular spy-coms to playing team games with real tasks, we will do it all. <br/><br/>
          This event is brought to you by Tekie in collaboration with Radio Street.
          </div> */}

          <div className='heading spy-heading m-top'>Become a Spy</div>
          <div className='row'>
            <div className='spy-card'>
              <div className='spy-card-body'>
                <div className='spy-card-head'>History of a spy</div>
                <div className='spy-card-text'>Getting to know Alan Turing – WWII</div>
              </div>
              <div className='spy-card-image'></div>
            </div>
            <div className='spy-card'>
              <div className='spy-card-body'>
                <div className='spy-card-head'>Establishment of Modern CS</div>
                <div className='spy-card-text'>Learn the basics of what makes CS today.</div>
              </div>
              <div className='spy-card-image-languages'></div>
            </div>
            <div className='spy-card'>
              <div className='spy-card-body'>
                <div className='spy-card-head'>Intro To Binary Language</div>
                <div className='spy-card-text'>Learn How to write your name in binary</div>
              </div>
              <div className='spy-card-image-binary'></div>
            </div>
            <div className='spy-card'>
              <div className='spy-card-body'>
                <div className='spy-card-head'>Team activities</div>
                <div className='spy-card-text'>Cryptic Messaging, rewards & much more!</div>
              </div>
              <div className='spy-card-image-activity'></div>
            </div>
          </div>
          <div className='why-join-container'>
            <div className='why-join-title'>Why you should join the SpySquad</div>
            <div className='row'>
            <div className='why-join-card'>
                <div>
                  {renderCertificateIcon()}
                </div>
                <div className='join-desc'>Become a certified Spymaster in Binary language.</div>
              </div>
              <div className='why-join-card'>
                <div>
                  {renderBinaryIcon()}
                </div>
                <div className='join-desc'>Learn to Translate numbers, Letters and words into Binary Code.</div>
              </div>
              
              <div className='why-join-card'>
                <div>
                  {renderGiftIcon()}
                </div>
                <div className='join-desc'>Earn a free spy tool on participating & stand a chance to win exciting prizes.</div>
              </div>
            </div>
            <div className='row last-register' style={{ width: '100%', justifyContent: 'center' }}>
              {this.renderRegisterButton()}
            </div>
          </div>
        </div>
        <div className='footer-container' style={{ justifyContent: 'space-between' }}>
          <div className='footer-left-wrapper'>
            <div className='tekie-logo'></div>
            <div className='footer-text'>© 2020, Kiwhode Learning Pvt Ltd. All Rights Reserved.</div>
          </div>
          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>
            <a className='link' href="https://www.tekie.in/privacy">Privacy</a>
            <div className='sep'></div>
            <a className='link' href="https://www.tekie.in/terms">Terms</a>
            <div className='sep'></div>
            <a className='link' href="https://www.tekie.in/refund">Refund</a>
          </div>
        </div>
      </>
    )
  }
}

export default RadioStreet
